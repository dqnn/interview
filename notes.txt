TODO:
1. 188--buy stock IV, how to understand prevMax = Math.max(prevMax, dp[i - 1][j - 1] - prices[j]);
2. 740 delete and earn, i could understand the dp[i] = max(dp[i-2] + sum[nums[i]], 
dp[i-1]), but i cannot understand the iskip and itake version. 
3. backpack, how transfrom from 2D array to 1D to save space
4. how to understand the max square dp foruma, 3 square? why? max rectangle should applied to 
max square, 
5. re-write Trie class with hashmap, so that it can adapt to any problems, include add, search methods
6. write paint house 2 on paper from O(nk^2) to O(nk), this is also space optimization
7.LIS and russian env doll also used bianry search, so need to understand how and why we use bianry search
8.guess the number II, thinking about why k + max(dp[i][k-1], dp[k+1][j]), why we use max here? and 
draw the treeï¼Œ another is thinking about why 
9.combinationSum4,  knapsack VI problems. 