TODO:
1. 188--buy stock IV, how to understand prevMax = Math.max(prevMax, dp[i - 1][j - 1] - prices[j]);
2. 740 delete and earn, i could understand the dp[i] = max(dp[i-2] + sum[nums[i]], 
dp[i-1]), but i cannot understand the iskip and itake version. 
3. backpack, how transfrom from 2D array to 1D to save space, 
A: 
4. how to understand the max square dp foruma, 3 square? why? max rectangle should applied to 
max square, 
5. re-write Trie class with hashmap, so that it can adapt to any problems, include add, search methods
6. write paint house 2 on paper from O(nk^2) to O(nk), this is also space optimization
7.LIS and russian env doll also used bianry search, so need to understand how and why we use bianry search
8.guess the number II, thinking about why k + max(dp[i][k-1], dp[k+1][j]), why we use max here? and 
draw the treeï¼Œ another is thinking about why 
9.combinationSum4,  knapsack VI problems. 1. 2D solutions, 2. to understand in VI, why we put target in 
otter loop, 
10. longest wigger sequence, why up = down + 1? need more thoughts
11. lc 410, dp solution, not understand how it formed m groups. 
12. 514. Freedom Trail why we have to iterate from back, and why result is dp[0][0], +m can understand
13. longest palindrome sequence, i has to start from length() because j depends j+1, inner part depends on 
outter part
14. student record II, 552, brute force(O(3^n))->memo(O(n))->O(lgn) with the help of fast matrix
15. super wash machines, how max of dp array is the answer, the max stream?
16: lc 801, minimal swap to increase sequence, how to understand the forumla? 
17. max chunks to be sorted, double scan, how we can prove it?
18. Minimum Unique Word Abbreviation cannot understand the best solution?
19. 909. Snakes and Ladders not understand the problem.
20. 25 reverse() is interesting one about last two lines of code, 0->1->2->3->4->5, remember how we move begin and cur
