1. describe one project you could have done better?
2. FB -BQ: 1) dive deep into most recent project 
             Latency, metrics, improvements
           2) most interesting debug/bug 
             HTTP Cache, enable the cache for Kindle for android
           3) describe most favorite day in your current company（呵呵)
             we have interns come, 
           4) how to work across team 
             trivial
              1. understand the away team model, protocol between teams, 
              2. search the team wiki, to see their documents, find the answer or understand their 
              3. contact their oncall.  
             Project
              1. ask their manager to allocate POC 
              2. weekly sync up 
              3. design review and meeting minutes
              4. launch and ops documentations
              5. give them suggestions to improve
              
              understand dependency team 1-2 year plan 
              understand the metrics
           5) give me an example you push back 
              feature launch
              the new team the would like to launch new feature, author follow, they increase 
              latency by 20ms, i asked them to do another latency reduction project at the same time and 
              wrap in same weblab
              
           6) example you regret your design
              there should be standard answer if you dive deep
              we have some features in Cart to show to some customers, like no-rush promotion in cart, 
              but it has some threshold,  when the features was launched, PMs requested to change this 
              frequently,  so we use a Retail Storage called sable,  so PM can update the value by themselves, 
              pros: 1. short the time to Prod, previous was 1 week, now 15m, 
                    2. no more code change
              Cons 1. PM still request us to update. still cause SDE efforts
                   2. add sable dependency 
                   3. got some tickets request us to do a lot of paper work, ops work
                   4. later actually there was no more request to change it. 
          7) when you are oncall, what's most difficulty problems solved? biggest events
          
          8) Tell me about a time you failed 
               -- mentor young engineers, intern, at that time i was on latency,  he was very 
                interested in latency but in the end he did not get the offer, and he feel pretty frustrated
                not successful reasons: 1) too much to learn, like Amazon systems, metrics, latency terms, mechnisms
                3) cannot understand production code so last i asked him to implement the new latency metrics for 
                reference, he also cannot fully completed it. we did not give him offer: 1) he is pretty clever, but 
                he did not asked a lot of questions but he spent some time on it, 2); work proacitve although i requested him 
                3): did not show enough data on the delivery, big lesson, should choose suitable project for beginners
                
                for myself, i made some assumptions about the dependency, i thought they should be regioanlized but actually
                they are not
          9) what are you strengths and weaknesses  dive deep and delivery results, weakness, presentations, 
           how to make big impacts, convince other people with less data 
         10) did you work with someone who was not performing well and if so what action did you take
         11)  did you have difficulty convincing someone about you ideas
         12)  what is your ideal job
         13)  why do you want to join this company
         14)  why are you looking to leave Amazon?
                   
              